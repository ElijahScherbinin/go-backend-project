services:

  backend-user-service:
    image: user-service
    container_name: backend-user-service
    build:
      context: ./user-service
    ports:
      - 8000:8000
    networks:
      - backend-network

  backend-user-postgres:
    image: postgres
    container_name: backend-user-postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=user_service
    volumes:
      - ./docker_data/postgres:/var/lib/postgresql/data/
    networks:
      - backend-network
    ports:
      - "5432:5432"

  backend-nginx:
    image: nginx:stable-alpine
    container_name: backend-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend-user-service
    networks:
      - backend-network

  backend-prometheus:
    image: prom/prometheus:latest
    container_name: backend-prometheus
    restart: always
    user: "0"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker_data/prometheus/:/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - backend-network

  backend-grafana:
    image: grafana/grafana
    container_name: backend-grafana
    depends_on:
      - backend-prometheus
    restart: always
    user: "0"
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
      - GF_SECURITY_ALLOW_EMBEDDING=true
    networks:
      - backend-network
    volumes:
      - ./docker_data/grafana/:/var/lib/grafana/

networks:
  backend-network:
    driver: bridge